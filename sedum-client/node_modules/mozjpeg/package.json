{
  "_args": [
    [
      {
        "raw": "mozjpeg@^6.0.0",
        "scope": null,
        "escapedName": "mozjpeg",
        "name": "mozjpeg",
        "rawSpec": "^6.0.0",
        "spec": ">=6.0.0 <7.0.0",
        "type": "range"
      },
      "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client/node_modules/imagemin-mozjpeg"
    ]
  ],
  "_cnpm_publish_time": 1540951446257,
  "_from": "mozjpeg@^6.0.0",
  "_hasShrinkwrap": false,
  "_id": "mozjpeg@6.0.1",
  "_location": "/mozjpeg",
  "_nodeVersion": "10.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/mozjpeg_6.0.1_1540951446116_0.8925920171887565"
  },
  "_npmUser": {
    "name": "1000ch",
    "email": "shogo.sensui@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mozjpeg@^6.0.0",
    "scope": null,
    "escapedName": "mozjpeg",
    "name": "mozjpeg",
    "rawSpec": "^6.0.0",
    "spec": ">=6.0.0 <7.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/imagemin-mozjpeg"
  ],
  "_resolved": "http://registry.npm.souche-inc.com/mozjpeg/download/mozjpeg-6.0.1.tgz",
  "_shasum": "56969dddb5741ef2bcb1af066cae21e61a91a27b",
  "_shrinkwrap": null,
  "_spec": "mozjpeg@^6.0.0",
  "_where": "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client/node_modules/imagemin-mozjpeg",
  "ava": {
    "serial": true
  },
  "bin": {
    "mozjpeg": "cli.js"
  },
  "bugs": {
    "url": "https://github.com/imagemin/mozjpeg-bin/issues"
  },
  "dependencies": {
    "bin-build": "^3.0.0",
    "bin-wrapper": "^4.0.0",
    "logalot": "^2.1.0"
  },
  "description": "mozjpeg wrapper that makes it seamlessly available as a local dependency",
  "devDependencies": {
    "ava": "*",
    "bin-check": "^4.1.0",
    "compare-size": "^3.0.0",
    "execa": "^1.0.0",
    "tempy": "^0.2.1",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "56969dddb5741ef2bcb1af066cae21e61a91a27b",
    "size": 2511,
    "noattachment": false,
    "tarball": "http://registry.npm.souche-inc.com/mozjpeg/download/mozjpeg-6.0.1.tgz"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "index.js",
    "cli.js",
    "lib"
  ],
  "gitHead": "651d9b607f1eebb3aba3028b6c0331884697d50e",
  "homepage": "https://github.com/imagemin/mozjpeg-bin#readme",
  "keywords": [
    "imagemin",
    "jpeg",
    "jpg",
    "img",
    "image",
    "compress",
    "minify",
    "mozjpeg",
    "optimize"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "1000ch",
      "email": "shogo.sensui@gmail.com"
    },
    {
      "name": "bradbaris",
      "email": "bradbaris@gmail.com"
    },
    {
      "name": "kevva",
      "email": "kevinmartensson@gmail.com"
    },
    {
      "name": "nothingismagick",
      "email": "daniel@kinokabaret.com"
    },
    {
      "name": "shinnn",
      "email": "snnskwtnb@gmail.com"
    },
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "mozjpeg",
  "optionalDependencies": {},
  "publish_time": 1540951446257,
  "readme": "# mozjpeg-bin [![Build Status](https://travis-ci.org/imagemin/mozjpeg-bin.svg?branch=master)](http://travis-ci.org/imagemin/mozjpeg-bin)\n\n> [mozjpeg](https://github.com/mozilla/mozjpeg) is a production-quality JPEG encoder that improves compression while maintaining compatibility with the vast majority of deployed decoders\n\nYou probably want [`imagemin-mozjpeg`](https://github.com/imagemin/imagemin-mozjpeg) instead.\n\n\n## Install\n\n```\n$ npm install mozjpeg\n```\n\n\n## Usage\n\n```js\nconst {execFile} = require('child_process');\nconst mozjpeg = require('mozjpeg');\n\nexecFile(mozjpeg, ['-outfile', 'output.jpg', 'input.jpg'], err => {\n\tconsole.log('Image minified!');\n});\n```\n\n\n## CLI\n\n```\n$ npm install --global mozjpeg\n```\n\n```\n$ mozjpeg --help\n```\n\n\n## License\n\nMIT Â© [Imagemin](https://github.com/imagemin)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/imagemin/mozjpeg-bin.git"
  },
  "scripts": {
    "build-linux": "docker build --tag imagemin/mozjpeg docker && docker run --rm --volume $(pwd)/vendor/linux:/src/out imagemin/mozjpeg cp cjpeg /src/out",
    "postinstall": "node lib/install.js",
    "test": "xo && ava"
  },
  "version": "6.0.1"
}
