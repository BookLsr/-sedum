{
  "_args": [
    [
      {
        "raw": "capture-exit@^2.0.0",
        "scope": null,
        "escapedName": "capture-exit",
        "name": "capture-exit",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client/node_modules/sane"
    ]
  ],
  "_cnpm_publish_time": 1545410630251,
  "_from": "capture-exit@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "capture-exit@2.0.0",
  "_location": "/capture-exit",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/capture-exit_2.0.0_1545410630121_0.7341934041369735"
  },
  "_npmUser": {
    "name": "rwjblue",
    "email": "me@rwjblue.com"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "capture-exit@^2.0.0",
    "scope": null,
    "escapedName": "capture-exit",
    "name": "capture-exit",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/sane"
  ],
  "_resolved": "http://registry.npm.souche-inc.com/capture-exit/download/capture-exit-2.0.0.tgz",
  "_shasum": "fb953bfaebeb781f62898239dabb426d08a509a4",
  "_shrinkwrap": null,
  "_spec": "capture-exit@^2.0.0",
  "_where": "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client/node_modules/sane",
  "author": {
    "name": "Stefan Penner",
    "email": "stefan.penner@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/stefanpenner/capture-exit/issues"
  },
  "dependencies": {
    "rsvp": "^4.8.4"
  },
  "description": "safely cleanup in signal handlers",
  "devDependencies": {
    "chai": "^4.2.0",
    "execa": "1.0.0",
    "mocha": "^5.2.0",
    "ora": "^3.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "fb953bfaebeb781f62898239dabb426d08a509a4",
    "size": 2412,
    "noattachment": false,
    "tarball": "http://registry.npm.souche-inc.com/capture-exit/download/capture-exit-2.0.0.tgz"
  },
  "engines": {
    "node": "6.* || 8.* || >= 10.*"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/stefanpenner/capture-exit#readme",
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ember-cli",
      "email": "stefan.penner+ember-cli@gmail.com"
    },
    {
      "name": "hjdivad",
      "email": "npm@hjdivad.com"
    },
    {
      "name": "rwjblue",
      "email": "me@rwjblue.com"
    },
    {
      "name": "stefanpenner",
      "email": "stefan.penner@gmail.com"
    }
  ],
  "name": "capture-exit",
  "optionalDependencies": {},
  "publish_time": 1545410630251,
  "readme": "# capture-exit\n\n[![Build status](https://ci.appveyor.com/api/projects/status/8044m918rwic8b9n/branch/master?svg=true)](https://ci.appveyor.com/project/embercli/capture-exit/branch/master)\n[![Build Status](https://travis-ci.org/ember-cli/capture-exit.svg?branch=master)](https://travis-ci.org/ember-cli/capture-exit)\n\nAllow cooprative async exit handlers, we unfortunately must hijack\nprocess.exit.\n\nIt allows a handler to ensure exit, without that exit handler impeding other\nsimilar handlers\n\nfor example, see: [sindresorhus/ora#27](https://github.com/sindresorhus/ora/issues/27)\n\nDifferences between `process.on('exit')` and `captureExit.onExit(...)` => https://github.com/ember-cli/capture-exit/issues/12\n\n\n### Installation\n\n```sh\nyarn add capture-exit\n// or\nnpm install --save capture-exit\n```\n\n### Usage\n\n```js\n// as early in startup as possible\nrequire('capture-exit').captureExit();\n\n// when you want to schedule some work on exit:\nfunction onExit() {\n  return something.processWillExit(); // you can return promises, which will pause exit until fulfilled\n}\n\nrequire('capture-exit').onExit(onExit); // add an exit handler\nrequire('capture-exit').offExit(onExit); // allows one to remove an exit handle if it is not longer required\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/stefanpenner/capture-exit.git"
  },
  "scripts": {
    "test": "mocha test",
    "test:debug": "mocha debug test"
  },
  "version": "2.0.0"
}
