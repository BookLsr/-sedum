{
  "_args": [
    [
      {
        "raw": "whatwg-encoding@^1.0.3",
        "scope": null,
        "escapedName": "whatwg-encoding",
        "name": "whatwg-encoding",
        "rawSpec": "^1.0.3",
        "spec": ">=1.0.3 <2.0.0",
        "type": "range"
      },
      "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client/node_modules/jsdom"
    ]
  ],
  "_cnpm_publish_time": 1538281259538,
  "_from": "whatwg-encoding@^1.0.3",
  "_hasShrinkwrap": false,
  "_id": "whatwg-encoding@1.0.5",
  "_location": "/whatwg-encoding",
  "_nodeVersion": "10.8.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/whatwg-encoding_1.0.5_1538281259420_0.48990278300644907"
  },
  "_npmUser": {
    "name": "domenic",
    "email": "d@domenic.me"
  },
  "_npmVersion": "6.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "whatwg-encoding@^1.0.3",
    "scope": null,
    "escapedName": "whatwg-encoding",
    "name": "whatwg-encoding",
    "rawSpec": "^1.0.3",
    "spec": ">=1.0.3 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/html-encoding-sniffer",
    "/jsdom"
  ],
  "_resolved": "http://registry.npm.souche-inc.com/whatwg-encoding/download/whatwg-encoding-1.0.5.tgz",
  "_shasum": "5abacf777c32166a51d085d6b4f3e7d27113ddb0",
  "_shrinkwrap": null,
  "_spec": "whatwg-encoding@^1.0.3",
  "_where": "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client/node_modules/jsdom",
  "author": {
    "name": "Domenic Denicola",
    "email": "d@domenic.me",
    "url": "https://domenic.me/"
  },
  "bugs": {
    "url": "https://github.com/jsdom/whatwg-encoding/issues"
  },
  "dependencies": {
    "iconv-lite": "0.4.24"
  },
  "description": "Decode strings according to the WHATWG Encoding Standard",
  "devDependencies": {
    "eslint": "^5.3.0",
    "got": "^9.0.0",
    "mocha": "^5.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "5abacf777c32166a51d085d6b4f3e7d27113ddb0",
    "size": 3947,
    "noattachment": false,
    "tarball": "http://registry.npm.souche-inc.com/whatwg-encoding/download/whatwg-encoding-1.0.5.tgz"
  },
  "files": [
    "lib/"
  ],
  "gitHead": "04c383e309e0d3f198e19b050295995028b6cc48",
  "homepage": "https://github.com/jsdom/whatwg-encoding#readme",
  "keywords": [
    "encoding",
    "whatwg"
  ],
  "license": "MIT",
  "main": "lib/whatwg-encoding.js",
  "maintainers": [
    {
      "name": "domenic",
      "email": "domenic@domenicdenicola.com"
    },
    {
      "name": "joris-van-der-wel",
      "email": "joris@jorisvanderwel.com"
    },
    {
      "name": "sebmaster",
      "email": "sebmaster16@gmail.com"
    },
    {
      "name": "timothygu",
      "email": "timothygu99@gmail.com"
    },
    {
      "name": "tmpvar",
      "email": "tmpvar@gmail.com"
    },
    {
      "name": "zirro",
      "email": "code@zirro.se"
    }
  ],
  "name": "whatwg-encoding",
  "optionalDependencies": {},
  "publish_time": 1538281259538,
  "readme": "# Decode According to the WHATWG Encoding Standard\n\nThis package provides a thin layer on top of [iconv-lite](https://github.com/ashtuchkin/iconv-lite) which makes it expose some of the same primitives as the [Encoding Standard](https://encoding.spec.whatwg.org/).\n\n```js\nconst whatwgEncoding = require(\"whatwg-encoding\");\n\nconsole.assert(whatwgEncoding.labelToName(\"latin1\") === \"windows-1252\");\nconsole.assert(whatwgEncoding.labelToName(\"  CYRILLic \") === \"ISO-8859-5\");\n\nconsole.assert(whatwgEncoding.isSupported(\"IBM866\") === true);\n\n// Not supported by the Encoding Standard\nconsole.assert(whatwgEncoding.isSupported(\"UTF-32\") === false);\n\n// In the Encoding Standard, but this package can't decode it\nconsole.assert(whatwgEncoding.isSupported(\"x-mac-cyrillic\") === false);\n\nconsole.assert(whatwgEncoding.getBOMEncoding(new Buffer([0xFE, 0xFF])) === \"UTF-16BE\");\nconsole.assert(whatwgEncoding.getBOMEncoding(new Buffer([0x48, 0x69])) === null);\n\nconsole.assert(whatwgEncoding.decode(new Buffer([0x48, 0x69]), \"UTF-8\") === \"Hi\");\n```\n\n## API\n\n- `decode(buffer, fallbackEncodingName)`: performs the [decode](https://encoding.spec.whatwg.org/#decode) algorithm (in which any BOM will override the passed fallback encoding), and returns the resulting string\n- `labelToName(label)`: performs the [get an encoding](https://encoding.spec.whatwg.org/#concept-encoding-get) algorithm and returns the resulting encoding's name, or `null` for failure\n- `isSupported(name)`: returns whether the encoding is one of [the encodings](https://encoding.spec.whatwg.org/#names-and-labels) of the Encoding Standard, _and_ is an encoding that this package can decode (via iconv-lite)\n- `getBOMEncoding(buffer)`: sniffs the first 2â€“3 bytes of the supplied `Buffer`, returning one of the encoding names `\"UTF-8\"`, `\"UTF-16LE\"`, or `\"UTF-16BE\"` if the appropriate BOM is present, or `null` if no BOM is present\n\n## Unsupported encodings\n\nSince we rely on iconv-lite, we are limited to support only the encodings that they support. Currently we are missing support for:\n\n- ISO-2022-JP\n- ISO-8859-8-I\n- replacement\n- x-mac-cyrillic\n- x-user-defined\n\nPassing these encoding names will return `false` when calling `isSupported`, and passing any of the possible labels for these encodings to `labelToName` will return `null`.\n\n## Credits\n\nThis package was originally based on the excellent work of [@nicolashenry](https://github.com/nicolashenry), [in jsdom](https://github.com/tmpvar/jsdom/blob/7ce11776ce161e8d5921a7a183585327400f786b/lib/jsdom/living/helpers/encoding.js). It has since been pulled out into this separate package.\n\n## Alternatives\n\nIf you are looking for a JavaScript implementation of the Encoding Standard's `TextEncoder` and `TextDecoder` APIs, you'll want [@inexorabletash](https://github.com/inexorabletash)'s [text-encoding](https://github.com/inexorabletash/text-encoding) package.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jsdom/whatwg-encoding.git"
  },
  "scripts": {
    "lint": "eslint lib test",
    "prepare": "node scripts/update.js",
    "test": "mocha"
  },
  "version": "1.0.5"
}
