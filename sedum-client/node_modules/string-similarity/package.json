{
  "_args": [
    [
      {
        "raw": "string-similarity@^1.2.2",
        "scope": null,
        "escapedName": "string-similarity",
        "name": "string-similarity",
        "rawSpec": "^1.2.2",
        "spec": ">=1.2.2 <2.0.0",
        "type": "range"
      },
      "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client/node_modules/gatsby"
    ]
  ],
  "_cnpm_publish_time": 1536745440191,
  "_from": "string-similarity@^1.2.2",
  "_hasShrinkwrap": false,
  "_id": "string-similarity@1.2.2",
  "_location": "/string-similarity",
  "_nodeVersion": "9.11.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/string-similarity_1.2.2_1536745439999_0.9119211862510248"
  },
  "_npmUser": {
    "name": "aceakash",
    "email": "npm@kurdekar.com"
  },
  "_npmVersion": "6.4.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "string-similarity@^1.2.2",
    "scope": null,
    "escapedName": "string-similarity",
    "name": "string-similarity",
    "rawSpec": "^1.2.2",
    "spec": ">=1.2.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gatsby"
  ],
  "_resolved": "http://registry.npm.souche-inc.com/string-similarity/download/string-similarity-1.2.2.tgz",
  "_shasum": "99b2c20a3c9bbb3903964eae1d89856db3d8db9b",
  "_shrinkwrap": null,
  "_spec": "string-similarity@^1.2.2",
  "_where": "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client/node_modules/gatsby",
  "author": {
    "name": "Akash Kurdekar",
    "email": "npm@kurdekar.com",
    "url": "http://untilfalse.com/"
  },
  "bugs": {
    "url": "https://github.com/aceakash/string-similarity/issues"
  },
  "dependencies": {
    "lodash.every": "^4.6.0",
    "lodash.flattendeep": "^4.4.0",
    "lodash.foreach": "^4.5.0",
    "lodash.map": "^4.6.0",
    "lodash.maxby": "^4.6.0"
  },
  "description": "Finds degree of similarity between strings, based on Dice's Coefficient, which is mostly better than Levenshtein distance.",
  "devDependencies": {
    "jasmine": "^3.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "99b2c20a3c9bbb3903964eae1d89856db3d8db9b",
    "size": 2491,
    "noattachment": false,
    "tarball": "http://registry.npm.souche-inc.com/string-similarity/download/string-similarity-1.2.2.tgz"
  },
  "files": [
    "compare-strings.js"
  ],
  "gitHead": "b7ea52ea57199927ef31ef0ec1430aa80f5e84f3",
  "homepage": "https://github.com/aceakash/string-similarity#readme",
  "keywords": [
    "strings",
    "similar",
    "difference",
    "similarity",
    "compare",
    "comparison",
    "degree",
    "match",
    "matching",
    "dice",
    "levenshtein"
  ],
  "license": "ISC",
  "main": "compare-strings.js",
  "maintainers": [
    {
      "name": "aceakash",
      "email": "npm@kurdekar.com"
    }
  ],
  "name": "string-similarity",
  "optionalDependencies": {},
  "publish_time": 1536745440191,
  "readme": "string-similarity\n=================\n\nFinds degree of similarity between two strings, based on [Dice's Coefficient](http://en.wikipedia.org/wiki/S%C3%B8rensen%E2%80%93Dice_coefficient), which is mostly better than [Levenshtein distance](http://en.wikipedia.org/wiki/Levenshtein_distance).\n\n## Usage\nInstall using:\n\n```shell\nnpm install string-similarity --save\n```\n\nIn your code:\n\n```javascript\nvar stringSimilarity = require('string-similarity');\n\nvar similarity = stringSimilarity.compareTwoStrings('healed', 'sealed'); \n\nvar matches = stringSimilarity.findBestMatch('healed', ['edward', 'sealed', 'theatre']);\n```\n## API\n\nRequiring the module gives an object with two methods:\n\n### compareTwoStrings(string1, string2)\n\nReturns a fraction between 0 and 1, which indicates the degree of similarity between the two strings. 0 indicates completely different strings, 1 indicates identical strings. The comparison is case-insensitive.\n\n##### Arguments\n  \n1. string1 (string): The first string\n2. string2 (string): The second string\n  \nOrder does not make a difference.\n  \n##### Returns\n  \n(number): A fraction from 0 to 1, both inclusive. Higher number indicates more similarity.\n\n##### Examples\n  \n```javascript\nstringSimilarity.compareTwoStrings('healed', 'sealed');\n// → 0.8\n\nstringSimilarity.compareTwoStrings('Olive-green table for sale, in extremely good condition.', \n  'For sale: table in very good  condition, olive green in colour.');\n// → 0.7073170731707317\n\nstringSimilarity.compareTwoStrings('Olive-green table for sale, in extremely good condition.', \n  'For sale: green Subaru Impreza, 210,000 miles');\n// → 0.3013698630136986\n\nstringSimilarity.compareTwoStrings('Olive-green table for sale, in extremely good condition.', \n  'Wanted: mountain bike with at least 21 gears.');\n// → 0.11267605633802817\n```\n\n### findBestMatch(mainString, targetStrings)\n\nCompares `mainString` against each string in `targetStrings`.\n\n##### Arguments\n\n1. mainString (string): The string to match each target string against.\n2. targetStrings (Array): Each string in this array will be matched against the main string.\n\n##### Returns\n(Object): An object with a `ratings` property, which gives a similarity rating for each target string, and a `bestMatch` property, which specifies which target string was most similar to the main string.\n\n##### Examples\n```javascript\nstringSimilarity.findBestMatch('Olive-green table for sale, in extremely good condition.', [\n  'For sale: green Subaru Impreza, 210,000 miles', \n  'For sale: table in very good condition, olive green in colour.', \n  'Wanted: mountain bike with at least 21 gears.'\n]);\n// → \n{ ratings:\n   [ { target: 'For sale: green Subaru Impreza, 210,000 miles',\n       rating: 0.3013698630136986 },\n     { target: 'For sale: table in very good condition, olive green in colour.',\n       rating: 0.7073170731707317 },\n     { target: 'Wanted: mountain bike with at least 21 gears.',\n       rating: 0.11267605633802817 } ],\n  bestMatch:\n   { target: 'For sale: table in very good condition, olive green in colour.',\n     rating: 0.7073170731707317 } }\n```\n\n![Build status](https://codeship.com/projects/2aa453d0-0959-0134-8a76-4abcb29fe9b4/status?branch=master)\n[![Known Vulnerabilities](https://snyk.io/test/github/aceakash/string-similarity/badge.svg)](https://snyk.io/test/github/aceakash/string-similarity)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/aceakash/string-similarity.git"
  },
  "scripts": {
    "test": "jasmine"
  },
  "version": "1.2.2"
}
