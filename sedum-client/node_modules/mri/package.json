{
  "_args": [
    [
      {
        "raw": "mri@^1.1.0",
        "scope": null,
        "escapedName": "mri",
        "name": "mri",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client/node_modules/pretty-quick"
    ]
  ],
  "_cnpm_publish_time": 1545592088009,
  "_from": "mri@^1.1.0",
  "_hasShrinkwrap": false,
  "_id": "mri@1.1.4",
  "_location": "/mri",
  "_nodeVersion": "10.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/mri_1.1.4_1545592087832_0.8010756437872082"
  },
  "_npmUser": {
    "name": "lukeed",
    "email": "luke@lukeed.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mri@^1.1.0",
    "scope": null,
    "escapedName": "mri",
    "name": "mri",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/pretty-quick"
  ],
  "_resolved": "http://registry.npm.souche-inc.com/mri/download/mri-1.1.4.tgz",
  "_shasum": "7cb1dd1b9b40905f1fac053abe25b6720f44744a",
  "_shrinkwrap": null,
  "_spec": "mri@^1.1.0",
  "_where": "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client/node_modules/pretty-quick",
  "author": {
    "name": "Luke Edwards",
    "email": "luke.edwards05@gmail.com",
    "url": "lukeed.com"
  },
  "bugs": {
    "url": "https://github.com/lukeed/mri/issues"
  },
  "dependencies": {},
  "description": "Quickly scan for CLI flags and arguments",
  "devDependencies": {
    "tap-spec": "^4.1.1",
    "tape": "^4.6.3"
  },
  "directories": {},
  "dist": {
    "shasum": "7cb1dd1b9b40905f1fac053abe25b6720f44744a",
    "size": 4006,
    "noattachment": false,
    "tarball": "http://registry.npm.souche-inc.com/mri/download/mri-1.1.4.tgz"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "lib"
  ],
  "gitHead": "40051e689d80f77136ac990dafa2f27cdca48086",
  "homepage": "https://github.com/lukeed/mri#readme",
  "keywords": [
    "argv",
    "arguments",
    "cli",
    "minimist",
    "options",
    "optimist",
    "parser",
    "args"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "lukeed",
      "email": "luke@lukeed.com"
    }
  ],
  "name": "mri",
  "optionalDependencies": {},
  "publish_time": 1545592088009,
  "readme": "# mri [![Build Status](https://travis-ci.org/lukeed/mri.svg?branch=master)](https://travis-ci.org/lukeed/mri)\n\n> Quickly scan for CLI flags and arguments\n\nThis is a [fast](#benchmarks) and lightweight alternative to [`minimist`](https://github.com/substack/minimist) and [`yargs-parser`](https://github.com/yargs/yargs-parser).\n\nIt only exists because I find that I usually don't need most of what `minimist` and `yargs-parser` have to offer. However, `mri` is similar _enough_ that it might function as a \"drop-in replacement\" for you, too!\n\nSee [Comparisons](#comparisons) for more info.\n\n## Install\n\n```sh\n$ npm install --save mri\n```\n\n## Usage\n\n```sh\n$ demo-cli --foo --bar=baz -mtv -- hello world\n```\n\n```js\nconst mri = require('mri');\n\nconst argv = process.argv.slice(2);\n\nmri(argv);\n//=> { _: ['hello', 'world'], foo:true, bar:'baz', m:true, t:true, v:true }\n\nmri(argv, { boolean:['bar'] });\n//=> { _: ['baz', 'hello', 'world'], foo:true, bar:true, m:true, t:true, v:true }\n\nmri(argv, {\n  alias: {\n    b: 'bar',\n    foo: ['f', 'fuz']\n  }\n});\n//=> { _: ['hello', 'world'], foo:true, f:true, fuz:true, b:'baz', bar:'baz', m:true, t:true, v:true }\n```\n\n## API\n\n### mri(args, options)\nReturn: `Object`\n\n#### args\nType: `Array`<br>\nDefault: `[]`\n\nAn array of arguments to parse. For CLI usage, send `process.argv.slice(2)`. See [`process.argv`](https://nodejs.org/docs/latest/api/process.html#process_process_argv) for info.\n\n#### options.alias\nType: `Object`<br>\nDefault: `{}`\n\nAn object of keys whose values are `String`s or `Array<String>` of aliases. These will be added to the parsed output with matching values.\n\n#### options.boolean\nType: `Array|String`<br>\nDefault: `[]`\n\nA single key (or array of keys) that should be parsed as `Boolean`s.\n\n#### options.default\nType: `Object`<br>\nDefault: `{}`\n\nAn `key:value` object of defaults. If a default is provided for a key, its type (`typeof`) will be used to cast parsed arguments.\n\n```js\nmri(['--foo', 'bar']);\n//=> { _:[], foo:'bar' }\n\nmri(['--foo', 'bar'], {\n  default: { foo:true, baz:'hello', bat:42 }\n});\n//=> { _:['bar'], foo:true, baz:'hello', bat:42 }\n```\n\n> **Note:** Because `--foo` has a default of `true`, its output is cast to a Boolean. This means that `foo=true`, making `'bar'` an extra argument (`_` key).\n\n#### options.string\nType: `Array|String`<br>\nDefault: `[]`\n\nA single key (or array of keys) that should be parsed as `String`s.\n\n#### options.unknown\nType: `Function`<br>\nDefault: `undefined`\n\nCallback that is run when a parsed flag has not been defined as a known key or alias. Its only parameter is the unknown flag itself; eg `--foobar` or `-f`.\n\nOnce an unknown flag is encountered, parsing will terminate, regardless of your return value.\n\n> **Note:** `mri` _only_ checks for unknown flags if `options.unknown` **and** `options.alias` are populated. Otherwise, everything will be accepted.\n\n\n## Comparisons\n\n#### minimist\n\n- `mri` is 5x faster (see [benchmarks](#benchmarks))\n- Numerical values are cast as `Number`s when possible\n  - A key (and its aliases) will always honor `opts.boolean` or `opts.string`\n- Short flag groups are treated as `Boolean`s by default:\n    ```js\n    minimist(['-abc', 'hello']);\n    //=> { _:[], a:'', b:'', c:'hello' }\n\n    mri(['-abc', 'hello']);\n    //=> { _:[], a:true, b:true, c:'hello' }\n    ```\n- The `opts.unknown` behaves differently:\n  - Unlike `minimist`, `mri` will not continue continue parsing after encountering an unknown flag\n- Missing `options`:\n  - `opts.stopEarly`\n  - `opts['--']`\n- Ignores newlines (`\\n`) within args (see [test](https://github.com/substack/minimist/blob/master/test/parse.js#L69-L80))\n- Ignores slashBreaks within args (see [test](https://github.com/substack/minimist/blob/master/test/parse.js#L147-L157))\n- Ignores dot-nested flags (see [test](https://github.com/substack/minimist/blob/master/test/parse.js#L180-L197))\n\n#### yargs-parser\n\n- `mri` is 40x faster (see [benchmarks](#benchmarks))\n- Numerical values are cast as `Number`s when possible\n  - A key (and its aliases) will always honor `opts.boolean` or `opts.string`\n- Missing `options`:\n  - `opts.array`\n  - `opts.config`\n  - `opts.coerce`\n  - `opts.count`\n  - `opts.envPrefix`\n  - `opts.narg`\n  - `opts.normalize`\n  - `opts.configuration`\n  - `opts.number`\n  - `opts['--']`\n- Missing [`parser.detailed()`](https://github.com/yargs/yargs-parser#requireyargs-parserdetailedargs-opts) method\n- No [additional configuration](https://github.com/yargs/yargs-parser#configuration) object\n- Added [`options.unknown`](#optionsunknown) feature\n\n\n## Benchmarks\n\n```\n# Node v10.13.0\n\nminimist      x   324,469 ops/sec ±1.20% (96 runs sampled)\nmri           x 1,611,167 ops/sec ±0.22% (96 runs sampled)\nnopt          x   920,029 ops/sec ±1.13% (97 runs sampled)\nyargs-parser  x    39,542 ops/sec ±1.14% (95 runs sampled)\n```\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lukeed/mri.git"
  },
  "scripts": {
    "bench": "node bench",
    "test": "tape test/*.js | tap-spec"
  },
  "version": "1.1.4"
}
