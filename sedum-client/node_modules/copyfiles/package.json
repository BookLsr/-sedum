{
  "_args": [
    [
      {
        "raw": "copyfiles@^2.1.1",
        "scope": null,
        "escapedName": "copyfiles",
        "name": "copyfiles",
        "rawSpec": "^2.1.1",
        "spec": ">=2.1.1 <3.0.0",
        "type": "range"
      },
      "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client/node_modules/gatsby"
    ]
  ],
  "_cnpm_publish_time": 1562691079446,
  "_from": "copyfiles@^2.1.1",
  "_hasShrinkwrap": false,
  "_id": "copyfiles@2.1.1",
  "_location": "/copyfiles",
  "_nodeVersion": "10.15.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/copyfiles_2.1.1_1562691079329_0.8858834081975937"
  },
  "_npmUser": {
    "name": "cwmma",
    "email": "calvin.metcalf@gmail.com"
  },
  "_npmVersion": "6.10.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "copyfiles@^2.1.1",
    "scope": null,
    "escapedName": "copyfiles",
    "name": "copyfiles",
    "rawSpec": "^2.1.1",
    "spec": ">=2.1.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gatsby"
  ],
  "_resolved": "http://registry.npm.souche-inc.com/copyfiles/download/copyfiles-2.1.1.tgz",
  "_shasum": "d430e122d7880f92c45d372208b0af03b0c39db6",
  "_shrinkwrap": null,
  "_spec": "copyfiles@^2.1.1",
  "_where": "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client/node_modules/gatsby",
  "author": "",
  "bin": {
    "copyfiles": "./copyfiles",
    "copyup": "./copyfiles"
  },
  "bugs": {
    "url": "https://github.com/calvinmetcalf/copyfiles/issues"
  },
  "dependencies": {
    "glob": "^7.0.5",
    "minimatch": "^3.0.3",
    "mkdirp": "^0.5.1",
    "noms": "0.0.0",
    "through2": "^2.0.1",
    "yargs": "^13.2.4"
  },
  "description": "copy some files",
  "devDependencies": {
    "rimraf": "^2.2.6",
    "tap-spec": "^5.0.0",
    "tape": "^4.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "d430e122d7880f92c45d372208b0af03b0c39db6",
    "size": 5145,
    "noattachment": false,
    "tarball": "http://registry.npm.souche-inc.com/copyfiles/download/copyfiles-2.1.1.tgz"
  },
  "gitHead": "32f456c9a4864e6216014a637fc7d16f4a6f4569",
  "homepage": "https://github.com/calvinmetcalf/copyfiles#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "cwmma",
      "email": "calvin.metcalf@gmail.com"
    }
  ],
  "name": "copyfiles",
  "optionalDependencies": {},
  "publish_time": 1562691079446,
  "readme": "copyfiles [![Build Status](https://travis-ci.org/calvinmetcalf/copyfiles.svg)](https://travis-ci.org/calvinmetcalf/copyfiles)\n===\n\ncopy files easily\n\n### Install\n\n```bash\nnpm install copyfiles -g\n```\n### Command Line\n\n```bash\n  Usage: copyfiles [options] inFile [more files ...] outDirectory\n\n  Options:\n    -u, --up       slice a path off the bottom of the paths               [number]\n    -a, --all      include files & directories begining with a dot (.)   [boolean]\n    -f, --flat     flatten the output                                    [boolean]\n    -e, --exclude  pattern or glob to exclude (may be passed multiple times)\n    -E, --error    throw error if nothing is coppied                     [boolean]\n    -V, --verbose  print more information to console                     [boolean]\n    -s, --soft     do not overwrite destination files if they exist      [boolean]\n    -v, --version  Show version number                                   [boolean]\n    -h, --help     Show help                                             [boolean]\n```\n\ncopy some files, give it a bunch of arguments, (which can include globs), the last one\nis the out directory (which it will create if necessary).  Note: on windows globs must be **double quoted**, everybody else can quote however they please.\n\n```bash\ncopyfiles foo foobar foo/bar/*.js out\n```\n\nyou now have a directory called out, with the files foo and foobar in it, it also has a directory named foo with a directory named\nbar in it that has all the files from foo/bar that match the glob.\n\nIf all the files are in a folder that you don't want in the path out path, ex:\n\n```bash\ncopyfiles something/*.js out\n```\n\nwhich would put all the js files in `out/something`, you can use the `--up` (or `-u`) option\n\n```bash\ncopyfiles -u 1 something/*.js out\n```\n\nwhich would put all the js files in `out`\n\nyou can also just do -f which will flatten all the output into one directory, so with files ./foo/a.txt and ./foo/bar/b.txt\n\n```bash\ncopyfiles -f ./foo/*.txt ./foo/bar/*.txt out\n```\n\nwill put a.txt and b.txt into out\n\nif your terminal doesn't support globstars then you can quote them\n\n```bash\ncopyfiles -f ./foo/**/*.txt out\n```\n\ndoes not work by default on a mac\n\nbut\n\n```bash\ncopyfiles -f \"./foo/**/*.txt\" out\n```\n\ndoes.\n\nYou could quote globstars as a part of input:\n```bash\ncopyfiles some.json \"./some_folder/*.json\" ./dist/ && echo 'JSON files copied.'\n```\n\nYou can use the -e option to exclude some files from the pattern, so to exclude all all files ending in .test.js you could do\n\n```bash\ncopyfiles -e \"**/*.test.js\" -f ./foo/**/*.js out\n```\n\nOther options include\n\n- `-a` or `--all` which includes files that start with a dot.\n- `-s` or `--soft` to soft copy, which will not overwrite existing files.\n\n## copyup\n\nalso creates a `copyup` command which is identical to `copyfiles` but `-up` defaults to 1\n\n### Programic API\n\n```js\nvar copyfiles = require('copyfiles');\n\ncopyfiles([paths], opt, callback);\n```\ntakes an array of paths, last one is the destination path, also takes an optional argument which the -u option if a number, otherwise if it's `true` it's the flat option or if it is an object it is a hash of the various options (the long version e.g. up, all, flat, exclude, error, verbose and soft)  \n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/calvinmetcalf/copyfiles.git"
  },
  "scripts": {
    "test": "tape test/test.*.js | tspec"
  },
  "version": "2.1.1"
}
