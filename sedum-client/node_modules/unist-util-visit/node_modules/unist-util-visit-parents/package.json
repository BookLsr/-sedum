{
  "_args": [
    [
      {
        "raw": "unist-util-visit-parents@^2.0.0",
        "scope": null,
        "escapedName": "unist-util-visit-parents",
        "name": "unist-util-visit-parents",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client/node_modules/unist-util-visit"
    ]
  ],
  "_cnpm_publish_time": 1559288957624,
  "_from": "unist-util-visit-parents@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "unist-util-visit-parents@2.1.2",
  "_location": "/unist-util-visit/unist-util-visit-parents",
  "_nodeVersion": "12.2.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/unist-util-visit-parents_2.1.2_1559288957488_0.3979101293998073"
  },
  "_npmUser": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "unist-util-visit-parents@^2.0.0",
    "scope": null,
    "escapedName": "unist-util-visit-parents",
    "name": "unist-util-visit-parents",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/unist-util-visit"
  ],
  "_resolved": "http://registry.npm.souche-inc.com/unist-util-visit-parents/download/unist-util-visit-parents-2.1.2.tgz",
  "_shasum": "25e43e55312166f3348cae6743588781d112c1e9",
  "_shrinkwrap": null,
  "_spec": "unist-util-visit-parents@^2.0.0",
  "_where": "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client/node_modules/unist-util-visit",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "https://wooorm.com"
  },
  "bugs": {
    "url": "https://github.com/syntax-tree/unist-util-visit-parents/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    }
  ],
  "dependencies": {
    "unist-util-is": "^3.0.0"
  },
  "description": "Recursively walk over unist nodes, with ancestral information",
  "devDependencies": {
    "browserify": "^16.0.0",
    "nyc": "^14.0.0",
    "prettier": "^1.0.0",
    "remark": "^10.0.0",
    "remark-cli": "^6.0.0",
    "remark-preset-wooorm": "^5.0.0",
    "tape": "^4.0.0",
    "tinyify": "^2.0.0",
    "xo": "^0.24.0"
  },
  "directories": {},
  "dist": {
    "shasum": "25e43e55312166f3348cae6743588781d112c1e9",
    "size": 4483,
    "noattachment": false,
    "tarball": "http://registry.npm.souche-inc.com/unist-util-visit-parents/download/unist-util-visit-parents-2.1.2.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "74da40a04af87f881314999d5b4ff7740ce5ac31",
  "homepage": "https://github.com/syntax-tree/unist-util-visit-parents#readme",
  "keywords": [
    "unist",
    "walk",
    "util",
    "utility"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "kmck",
      "email": "keith@mcknig.ht"
    },
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "name": "unist-util-visit-parents",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "functions": 100,
    "branches": 100
  },
  "optionalDependencies": {},
  "prettier": {
    "tabWidth": 2,
    "useTabs": false,
    "singleQuote": true,
    "bracketSpacing": false,
    "semi": false,
    "trailingComma": "none"
  },
  "publish_time": 1559288957624,
  "readme": "# unist-util-visit-parents\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n[**unist**][unist] utility to visit nodes, with ancestral information.\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install unist-util-visit-parents\n```\n\n## Usage\n\n```js\nvar remark = require('remark')\nvar visit = require('unist-util-visit-parents')\n\nvar tree = remark.parse('Some _emphasis_, **importance**, and `code`.')\n\nvisit(tree, 'strong', visitor)\n\nfunction visitor(node, ancestors) {\n  console.log(ancestors)\n}\n```\n\nYields:\n\n```js\n[ { type: 'root', children: [ [Object] ] },\n  { type: 'paragraph',\n    children:\n     [ [Object],\n       [Object],\n       [Object],\n       [Object],\n       [Object],\n       [Object],\n       [Object] ] } ]\n```\n\n## API\n\n### `visit(tree[, test], visitor[, reverse])`\n\nVisit nodes ([**inclusive descendants**][descendant] of [`tree`][tree]), with\nancestral information.  Optionally filtering nodes.  Optionally in reverse.\n\n###### Parameters\n\n*   `tree` ([`Node`][node]) — [Tree][] to traverse\n*   `test` ([`Test`][is], optional) — [`is`][is]-compatible test (such as a\n    [type][])\n*   `visitor` ([Function][visitor]) — Function invoked when a node is found\n    that passes `test`\n*   `reverse` (`boolean`, default: `false`) — The tree is walked in [preorder][]\n    (NLR), visiting the node itself, then its [head][], etc.\n    When `reverse` is passed, the tree is stilled walked in preorder, but now\n    in NRL (the node itself, then its [tail][], etc.)\n\n#### `next? = visitor(node, ancestors)`\n\nInvoked when a node (matching `test`, if given) is found.\n\nVisitors are free to transform `node`.\nThey can also transform the [parent][] of node (the last of `ancestors`).\nReplacing `node` itself, if `visit.SKIP` is not returned, still causes its\n[descendant][]s to be visited.\nIf adding or removing previous [sibling][]s (or next siblings, in case of\n`reverse`) of `node`, `visitor` should return a new [`index`][index] (`number`)\nto specify the sibling to traverse after `node` is traversed.\nAdding or removing next siblings of `node` (or previous siblings, in case of\nreverse) is handled as expected without needing to return a new `index`.\nRemoving the `children` property of parent still results in them being\ntraversed.\n\n###### Parameters\n\n*   `node` ([`Node`][node]) — Found node\n*   `ancestors` (`Array.<Node>`) — [Ancestor][]s of `node`\n\n##### Returns\n\nThe return value can have the following forms:\n\n*   [`index`][index] (`number`) — Treated as a tuple of `[CONTINUE, index]`\n*   `action` (`*`) — Treated as a tuple of `[action]`\n*   `tuple` (`Array.<*>`) — List with one or two values, the first an `action`,\n    the second and `index`.\n    Note that passing a tuple only makes sense if the `action` is `SKIP`.\n    If the `action` is `EXIT`, that action can be returned.\n    If the `action` is `CONTINUE`, `index` can be returned.\n\n###### `action`\n\nAn action can have the following values:\n\n*   `visit.EXIT` (`false`) — Stop traversing immediately\n*   `visit.CONTINUE` (`true`) — Continue traversing as normal (same behaviour\n    as not returning anything)\n*   `visit.SKIP` (`'skip'`) — Do not traverse this node’s children; continue\n    with the specified index\n\n###### `index`\n\n[`index`][index] (`number`) — Move to the sibling at `index` next (after `node`\nitself is completely traversed).\nUseful if mutating the tree, such as removing the node the visitor is currently\non, or any of its previous siblings (or next siblings, in case of `reverse`)\nResults less than `0` or greater than or equal to `children.length` stop\ntraversing the parent\n\n## Related\n\n*   [`unist-util-visit`](https://github.com/syntax-tree/unist-util-visit)\n    — Like `visit-parents`, but with one parent\n*   [`unist-util-filter`](https://github.com/eush77/unist-util-filter)\n    — Create a new tree with all nodes that pass a test\n*   [`unist-util-map`](https://github.com/syntax-tree/unist-util-map)\n    — Create a new tree with all nodes mapped by a given function\n*   [`unist-util-flatmap`](https://gitlab.com/staltz/unist-util-flatmap)\n    — Create a new tree by mapping (to an array) with the provided function and\n    then flattening\n*   [`unist-util-remove`](https://github.com/eush77/unist-util-remove)\n    — Remove nodes from a tree that pass a test\n*   [`unist-util-select`](https://github.com/eush77/unist-util-select)\n    — Select nodes with CSS-like selectors\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/.github`][contributing] for ways to get\nstarted.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [Code of Conduct][coc].\nBy interacting with this repository, organisation, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definition -->\n\n[build-badge]: https://img.shields.io/travis/syntax-tree/unist-util-visit-parents.svg\n\n[build]: https://travis-ci.org/syntax-tree/unist-util-visit-parents\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/syntax-tree/unist-util-visit-parents.svg\n\n[coverage]: https://codecov.io/github/syntax-tree/unist-util-visit-parents\n\n[downloads-badge]: https://img.shields.io/npm/dm/unist-util-visit-parents.svg\n\n[downloads]: https://www.npmjs.com/package/unist-util-visit-parents\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/unist-util-visit-parents.svg\n\n[size]: https://bundlephobia.com/result?p=unist-util-visit-parents\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/join%20the%20community-on%20spectrum-7b16ff.svg\n\n[chat]: https://spectrum.chat/unified/syntax-tree\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[unist]: https://github.com/syntax-tree/unist\n\n[node]: https://github.com/syntax-tree/unist#node\n\n[visitor]: #next--visitornode-ancestors\n\n[contributing]: https://github.com/syntax-tree/.github/blob/master/contributing.md\n\n[support]: https://github.com/syntax-tree/.github/blob/master/support.md\n\n[coc]: https://github.com/syntax-tree/.github/blob/master/code-of-conduct.md\n\n[is]: https://github.com/syntax-tree/unist-util-is\n\n[preorder]: https://www.geeksforgeeks.org/tree-traversals-inorder-preorder-and-postorder/\n\n[descendant]: https://github.com/syntax-tree/unist#descendant\n\n[head]: https://github.com/syntax-tree/unist#head\n\n[tail]: https://github.com/syntax-tree/unist#tail\n\n[parent]: https://github.com/syntax-tree/unist#parent-1\n\n[sibling]: https://github.com/syntax-tree/unist#sibling\n\n[index]: https://github.com/syntax-tree/unist#index\n\n[ancestor]: https://github.com/syntax-tree/unist#ancestor\n\n[tree]: https://github.com/syntax-tree/unist#tree\n\n[type]: https://github.com/syntax-tree/unist#type\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "plugins": [
      "preset-wooorm"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/syntax-tree/unist-util-visit-parents.git"
  },
  "scripts": {
    "build": "npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify index.js -s unistUtilVisitParents > unist-util-visit-parents.js",
    "build-mangle": "browserify index.js -s unistUtilVisitParents -p tinyify > unist-util-visit-parents.min.js",
    "format": "remark . -qfo && prettier --write \"**/*.js\" && xo --fix",
    "test": "npm run format && npm run build && npm run test-coverage",
    "test-api": "node test",
    "test-coverage": "nyc --reporter lcov tape test.js"
  },
  "version": "2.1.2",
  "xo": {
    "prettier": true,
    "esnext": false,
    "ignores": [
      "unist-util-visit-parents.js"
    ]
  }
}
