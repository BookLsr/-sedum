{
  "_args": [
    [
      {
        "raw": "react-responsive-modal@^4.0.1",
        "scope": null,
        "escapedName": "react-responsive-modal",
        "name": "react-responsive-modal",
        "rawSpec": "^4.0.1",
        "spec": ">=4.0.1 <5.0.0",
        "type": "range"
      },
      "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client"
    ]
  ],
  "_cnpm_publish_time": 1557405585163,
  "_from": "react-responsive-modal@^4.0.1",
  "_hasShrinkwrap": false,
  "_id": "react-responsive-modal@4.0.1",
  "_location": "/react-responsive-modal",
  "_nodeVersion": "11.13.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-responsive-modal_4.0.1_1557405584933_0.3483347650604225"
  },
  "_npmUser": {
    "name": "leopradel",
    "email": "pradel.leo@gmail.com"
  },
  "_npmVersion": "6.7.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-responsive-modal@^4.0.1",
    "scope": null,
    "escapedName": "react-responsive-modal",
    "name": "react-responsive-modal",
    "rawSpec": "^4.0.1",
    "spec": ">=4.0.1 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "http://registry.npm.souche-inc.com/react-responsive-modal/download/react-responsive-modal-4.0.1.tgz",
  "_shasum": "f3de0fc2571be96ed8a013ee45d572f42ed1e7c5",
  "_shrinkwrap": null,
  "_spec": "react-responsive-modal@^4.0.1",
  "_where": "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client",
  "author": {
    "name": "LÃ©o Pradel"
  },
  "bugs": {
    "url": "https://github.com/pradel/react-responsive-modal/issues"
  },
  "dependencies": {
    "classnames": "^2.2.6",
    "focus-trap-react": "^4.0.1",
    "no-scroll": "^2.1.1",
    "prop-types": "^15.6.2",
    "react-transition-group": "^4.0.0"
  },
  "description": "A simple responsive and accessible react modal",
  "devDependencies": {
    "@babel/cli": "7.4.4",
    "@babel/core": "7.4.4",
    "@babel/plugin-proposal-class-properties": "7.4.4",
    "@babel/preset-env": "7.4.4",
    "@babel/preset-react": "7.0.0",
    "@types/react": "16.8.17",
    "@types/react-dom": "16.8.4",
    "babel-eslint": "10.0.1",
    "babel-jest": "24.8.0",
    "babel-plugin-external-helpers": "6.22.0",
    "babel-polyfill": "6.26.0",
    "codecov": "3.3.0",
    "docz": "1.1.0",
    "docz-plugin-css": "0.11.0",
    "docz-plugin-netlify": "1.1.4",
    "docz-theme-default": "1.1.0",
    "dtslint": "0.7.1",
    "enzyme": "3.9.0",
    "enzyme-adapter-react-16": "1.12.1",
    "eslint": "5.16.0",
    "eslint-config-airbnb": "17.1.0",
    "eslint-config-prettier": "4.2.0",
    "eslint-plugin-import": "2.17.2",
    "eslint-plugin-jsx-a11y": "6.2.1",
    "eslint-plugin-jsx-import": "0.0.1",
    "eslint-plugin-react": "7.13.0",
    "identity-obj-proxy": "3.0.0",
    "jest": "24.8.0",
    "jest-enzyme": "7.0.2",
    "prettier": "1.17.0",
    "react": "16.8.6",
    "react-docgen": "2.21.0",
    "react-dom": "16.8.6",
    "react-hot-loader": "4.8.4",
    "rollup": "1.11.3",
    "rollup-plugin-babel": "4.3.2",
    "rollup-plugin-peer-deps-external": "2.2.0",
    "rollup-plugin-postcss": "2.0.3",
    "size-limit": "1.3.1"
  },
  "directories": {},
  "dist": {
    "shasum": "f3de0fc2571be96ed8a013ee45d572f42ed1e7c5",
    "size": 26346,
    "noattachment": false,
    "tarball": "http://registry.npm.souche-inc.com/react-responsive-modal/download/react-responsive-modal-4.0.1.tgz"
  },
  "files": [
    "lib",
    "types",
    "src"
  ],
  "gitHead": "8ec601a1e1f3e5a5b0cfcdea1bc9bde2b6f6f93b",
  "homepage": "https://github.com/pradel/react-responsive-modal#readme",
  "jest": {
    "setupFilesAfterEnv": [
      "./__tests__/setupTests.js"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/node_modules/",
      "<rootDir>/docs/",
      "<rootDir>/__tests__/setupTests.js"
    ],
    "moduleNameMapper": {
      "\\.(css)$": "identity-obj-proxy"
    }
  },
  "jsnext:main": "lib/index.es.js",
  "keywords": [
    "react",
    "responsive",
    "modal",
    "flex"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "leopradel",
      "email": "pradel.leo@gmail.com"
    }
  ],
  "module": "lib/index.es.js",
  "name": "react-responsive-modal",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^16.6.0",
    "react-dom": "^16.6.0"
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "es5"
  },
  "publish_time": 1557405585163,
  "readme": "# react-responsive-modal\n\n[![npm version](https://img.shields.io/npm/v/react-responsive-modal.svg)](https://www.npmjs.com/package/react-responsive-modal)\n[![npm downloads per month](https://img.shields.io/npm/dm/react-responsive-modal.svg)](https://www.npmjs.com/package/react-responsive-modal)\n[![codecov](https://img.shields.io/codecov/c/github/pradel/react-responsive-modal/master.svg)](https://codecov.io/gh/pradel/react-responsive-modal)\n[![dependencies Status](https://david-dm.org/pradel/react-responsive-modal/status.svg)](https://david-dm.org/pradel/react-responsive-modal)\n\nA simple responsive and accessible react modal compatible with React 16 and ready for React 17.\n\n- Focus trap inside the modal.\n- Centered modals.\n- Scrolling modals.\n- Multiple modals.\n- Easily customizable via props.\n\n## Documentation\n\n- [Getting started](https://react-responsive-modal.leopradel.com/)\n  - [Installation](https://react-responsive-modal.leopradel.com/#installation)\n  - [Usage](https://react-responsive-modal.leopradel.com/#usage)\n  - [Props](https://react-responsive-modal.leopradel.com/#props)\n  - [Licence](https://react-responsive-modal.leopradel.com/#license)\n- [Examples](https://react-responsive-modal.leopradel.com/examples)\n  - [Centered modal](https://react-responsive-modal.leopradel.com/examples#centered-modal)\n  - [Multiple modal](https://react-responsive-modal.leopradel.com/examples#multiple-modal)\n  - [Custom styling](https://react-responsive-modal.leopradel.com/examples#custom-styling)\n  - [Custom animation](https://react-responsive-modal.leopradel.com/examples#custom-animation)\n  - [Custom container](https://react-responsive-modal.leopradel.com/examples#custom-container)\n\n## Installation\n\nWith npm: `npm install react-responsive-modal --save`\n\nOr with yarn: `yarn add react-responsive-modal`\n\n## Usage\n\n[![Edit react-responsive-modal](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/9jxp669j2o)\n\n```javascript\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-responsive-modal';\n\nexport default class App extends React.Component {\n  state = {\n    open: false,\n  };\n\n  onOpenModal = () => {\n    this.setState({ open: true });\n  };\n\n  onCloseModal = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { open } = this.state;\n    return (\n      <div>\n        <button onClick={this.onOpenModal}>Open modal</button>\n        <Modal open={open} onClose={this.onCloseModal} center>\n          <h2>Simple centered modal</h2>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('app'));\n```\n\n## Props\n\n<!-- --begin-insert-props-- -->\n\n### Modal\n\n| Name                | Type     | Default                                                                                                                            | Description                                                                                                                                                                                                                                                                                                                                                                                            |\n| ------------------- | -------- | ---------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| closeOnEsc          | `bool`   | `true`                                                                                                                             | Is the modal closable when user press esc key.                                                                                                                                                                                                                                                                                                                                                         |\n| closeOnOverlayClick | `bool`   | `true`                                                                                                                             | Is the modal closable when user click on overlay.                                                                                                                                                                                                                                                                                                                                                      |\n| onEntered           | `func`   | `null`                                                                                                                             | Callback fired when the Modal is open and the animation is finished.                                                                                                                                                                                                                                                                                                                                   |\n| onExited            | `func`   | `null`                                                                                                                             | Callback fired when the Modal has exited and the animation is finished.                                                                                                                                                                                                                                                                                                                                |\n| **onClose\\***       | `func`   |                                                                                                                                    | Callback fired when the Modal is requested to be closed by a click on the overlay or when user press esc key.                                                                                                                                                                                                                                                                                          |\n| onEscKeyDown        | `func`   | `null`                                                                                                                             | Callback fired when the escape key is pressed.                                                                                                                                                                                                                                                                                                                                                         |\n| onOverlayClick      | `func`   | `null`                                                                                                                             | Callback fired when the overlay is clicked.                                                                                                                                                                                                                                                                                                                                                            |\n| **open\\***          | `bool`   |                                                                                                                                    | Control if the modal is open or not.                                                                                                                                                                                                                                                                                                                                                                   |\n| classNames          | `object` |                                                                                                                                    | An object containing classNames to style the modal, can have properties 'overlay' (classname for overlay div), 'modal' (classname for modal content div), 'closeButton' (classname for the button that contain the close icon), 'closeIcon' (classname for close icon svg). You can customize the transition with 'transitionEnter', 'transitionEnterActive', 'transitionExit', 'transitionExitActive' |\n| styles              | `object` |                                                                                                                                    | An object containing the styles objects to style the modal, can have properties 'overlay', 'modal', 'closeButton', 'closeIcon'.                                                                                                                                                                                                                                                                        |\n| children            | `node`   | `null`                                                                                                                             | The content of the modal.                                                                                                                                                                                                                                                                                                                                                                              |\n| center              | `bool`   | `false`                                                                                                                            | Should the dialog be centered.                                                                                                                                                                                                                                                                                                                                                                         |\n| showCloseIcon       | `bool`   | `true`                                                                                                                             | Show the close icon.                                                                                                                                                                                                                                                                                                                                                                                   |\n| closeIconSize       | `number` | `28`                                                                                                                               | Close icon size.                                                                                                                                                                                                                                                                                                                                                                                       |\n| closeIconSvgPath    | `node`   | `<path d=\"M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z\" />` | A valid svg path to show as icon.                                                                                                                                                                                                                                                                                                                                                                      |\n| animationDuration   | `number` | `500`                                                                                                                              | Animation duration in milliseconds.                                                                                                                                                                                                                                                                                                                                                                    |\n| container           | `object` |                                                                                                                                    | You can specify a container prop which should be of type `Element`. The portal will be rendered inside that element. The default behavior will create a div node and render it at the at the end of document.body.                                                                                                                                                                                     |\n| blockScroll         | `bool`   | `true`                                                                                                                             | Whether to block scrolling when dialog is open                                                                                                                                                                                                                                                                                                                                                         |\n| focusTrapped        | `bool`   | `false`                                                                                                                            | When the modal is open, trap focus within it                                                                                                                                                                                                                                                                                                                                                           |\n| focusTrapOptions    | `object` |                                                                                                                                    | Options to be passed to the focus trap, details available at https://github.com/davidtheclark/focus-trap#focustrap--createfocustrapelement-createoptions                                                                                                                                                                                                                                               |\n| overlayId           | `string` | `null`                                                                                                                             | id attribute for overlay                                                                                                                                                                                                                                                                                                                                                                               |\n| modalId             | `string` | `null`                                                                                                                             | id attribute for modal                                                                                                                                                                                                                                                                                                                                                                                 |\n| closeIconId         | `string` | `null`                                                                                                                             | id attribute for close icon                                                                                                                                                                                                                                                                                                                                                                            |\n| role                | `string` | `'dialog'`                                                                                                                         | ARIA role for modal                                                                                                                                                                                                                                                                                                                                                                                    |\n| ariaLabelledby      | `string` |                                                                                                                                    | ARIA label for modal                                                                                                                                                                                                                                                                                                                                                                                   |\n| ariaDescribedby     | `string` |                                                                                                                                    | ARIA description for modal                                                                                                                                                                                                                                                                                                                                                                             |\n\n<!-- --end-insert-props-- -->\n\n## License\n\nMIT Â© [LÃ©o Pradel](https://www.leopradel.com/)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pradel/react-responsive-modal.git"
  },
  "scripts": {
    "build": "rollup -c",
    "build:watch": "rollup -c -w",
    "docz:build": "docz build",
    "docz:dev": "docz dev",
    "dtslint": "dtslint types",
    "generate-props": "node scripts/generateReactPropsTable.js src/modal.js && yarn prettier",
    "lint": "eslint 'src' '__tests__'",
    "prettier": "prettier --write \"**/*.{js,ts,tsx,css,scss,json,md,mdx}\"",
    "size": "size-limit",
    "test": "yarn test:coverage && yarn lint && yarn build && yarn dtslint && yarn size && yarn docz:build",
    "test:coverage": "yarn test:only --coverage",
    "test:only": "jest __tests__"
  },
  "size-limit": [
    {
      "path": "lib/index.js",
      "limit": "8 KB"
    }
  ],
  "types": "types",
  "version": "4.0.1"
}
