{
  "_args": [
    [
      {
        "raw": "minizlib@^2.1.0",
        "scope": null,
        "escapedName": "minizlib",
        "name": "minizlib",
        "rawSpec": "^2.1.0",
        "spec": ">=2.1.0 <3.0.0",
        "type": "range"
      },
      "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client/node_modules/tar"
    ]
  ],
  "_cnpm_publish_time": 1570255623772,
  "_from": "minizlib@^2.1.0",
  "_hasShrinkwrap": false,
  "_id": "minizlib@2.1.0",
  "_location": "/minizlib",
  "_nodeVersion": "12.11.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/minizlib_2.1.0_1570255623624_0.5196261615937616"
  },
  "_npmUser": {
    "name": "isaacs",
    "email": "i@izs.me"
  },
  "_npmVersion": "6.12.0-next.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "minizlib@^2.1.0",
    "scope": null,
    "escapedName": "minizlib",
    "name": "minizlib",
    "rawSpec": "^2.1.0",
    "spec": ">=2.1.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/tar"
  ],
  "_resolved": "http://registry.npm.souche-inc.com/minizlib/download/minizlib-2.1.0.tgz",
  "_shasum": "fd52c645301ef09a63a2c209697c294c6ce02cf3",
  "_shrinkwrap": null,
  "_spec": "minizlib@^2.1.0",
  "_where": "/Users/windpursuer/IdeaProjects/tb/sedum/sedum-client/node_modules/tar",
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/"
  },
  "bugs": {
    "url": "https://github.com/isaacs/minizlib/issues"
  },
  "dependencies": {
    "minipass": "^3.0.0",
    "yallist": "^4.0.0"
  },
  "description": "A small fast zlib stream built on [minipass](http://npm.im/minipass) and Node.js's zlib binding.",
  "devDependencies": {
    "tap": "^14.6.9"
  },
  "directories": {},
  "dist": {
    "shasum": "fd52c645301ef09a63a2c209697c294c6ce02cf3",
    "size": 6062,
    "noattachment": false,
    "tarball": "http://registry.npm.souche-inc.com/minizlib/download/minizlib-2.1.0.tgz"
  },
  "engines": {
    "node": ">= 8"
  },
  "files": [
    "index.js",
    "constants.js"
  ],
  "gitHead": "7972a022540d40f62ba8fd3e8038c057773e981c",
  "homepage": "https://github.com/isaacs/minizlib#readme",
  "keywords": [
    "zlib",
    "gzip",
    "gunzip",
    "deflate",
    "inflate",
    "compression",
    "zip",
    "unzip"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "adam_baldwin",
      "email": "baldwin@andyet.net"
    },
    {
      "name": "ahmadnassri",
      "email": "ahmad@codeinchaos.com"
    },
    {
      "name": "annekimsey",
      "email": "anne@npmjs.com"
    },
    {
      "name": "billatnpm",
      "email": "billatnpm@gmail.com"
    },
    {
      "name": "claudiahdz",
      "email": "cghr1990@gmail.com"
    },
    {
      "name": "darcyclarke",
      "email": "darcy@darcyclarke.me"
    },
    {
      "name": "isaacs",
      "email": "i@izs.me"
    },
    {
      "name": "mikemimik",
      "email": "mike@mikecorp.ca"
    },
    {
      "name": "ruyadorno",
      "email": "contact@ruyadorno.com"
    }
  ],
  "name": "minizlib",
  "optionalDependencies": {},
  "publish_time": 1570255623772,
  "readme": "# minizlib\n\nA fast zlib stream built on [minipass](http://npm.im/minipass) and\nNode.js's zlib binding.\n\nThis module was created to serve the needs of\n[node-tar](http://npm.im/tar) and\n[minipass-fetch](http://npm.im/minipass-fetch).\n\nBrotli is supported in versions of node with a Brotli binding.\n\n## How does this differ from the streams in `require('zlib')`?\n\nFirst, there are no convenience methods to compress or decompress a\nbuffer.  If you want those, use the built-in `zlib` module.  This is\nonly streams.  That being said, Minipass streams to make it fairly easy to\nuse as one-liners: `new zlib.Deflate().end(data).read()` will return the\ndeflate compressed result.\n\nThis module compresses and decompresses the data as fast as you feed\nit in.  It is synchronous, and runs on the main process thread.  Zlib\nand Brotli operations can be high CPU, but they're very fast, and doing it\nthis way means much less bookkeeping and artificial deferral.\n\nNode's built in zlib streams are built on top of `stream.Transform`.\nThey do the maximally safe thing with respect to consistent\nasynchrony, buffering, and backpressure.\n\nSee [Minipass](http://npm.im/minipass) for more on the differences between\nNode.js core streams and Minipass streams, and the convenience methods\nprovided by that class.\n\n## Classes\n\n- Deflate\n- Inflate\n- Gzip\n- Gunzip\n- DeflateRaw\n- InflateRaw\n- Unzip\n- BrotliCompress (Node v10 and higher)\n- BrotliDecompress (Node v10 and higher)\n\n## USAGE\n\n```js\nconst zlib = require('minizlib')\nconst input = sourceOfCompressedData()\nconst decode = new zlib.BrotliDecompress()\nconst output = whereToWriteTheDecodedData()\ninput.pipe(decode).pipe(output)\n```\n\n## REPRODUCIBLE BUILDS\n\nTo create reproducible gzip compressed files across different operating\nsystems, set `portable: true` in the options.  This causes minizlib to set\nthe `OS` indicator in byte 9 of the extended gzip header to `0xFF` for\n'unknown'.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/isaacs/minizlib.git"
  },
  "scripts": {
    "postpublish": "git push origin --all; git push origin --tags",
    "postversion": "npm publish",
    "preversion": "npm test",
    "test": "tap test/*.js --100 -J"
  },
  "version": "2.1.0"
}
