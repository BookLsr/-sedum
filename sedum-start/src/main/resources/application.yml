logging:
  level:
    org.springframework.core.env: warn
    org.springframework.jndi: warn

server:
  compression:
    enabled: true
    mime-types: application/json,text/css,text/html
    min-response-size: 2048
  error:
    whitelabel:
      enabled: false
  forward-headers-strategy: native

spring:
  jackson:
    serialization:
      write-dates-as-timestamps: false
  task:
    execution:
      thread-name-prefix: initializr-

initializr:
  env:
    boms:
      azure:
        groupId: com.microsoft.azure
        artifactId: azure-spring-boot-bom
        versionProperty: azure.version
        mappings:
          - compatibilityRange: "[2.0.0.RELEASE,2.1.0.RELEASE)"
            version: 2.0.10
          - compatibilityRange: "[2.1.0.RELEASE, 2.2.0.M1)"
            version: 2.1.7
          - compatibilityRange: "2.2.0.M1"
            version: 2.2.0
      codecentric-spring-boot-admin:
        groupId: de.codecentric
        artifactId: spring-boot-admin-dependencies
        versionProperty: spring-boot-admin.version
        mappings:
          - compatibilityRange: "[2.0.0.M1,2.1.0.M1)"
            version: 2.0.6
          - compatibilityRange: "[2.1.0.M1,2.2.0.M1)"
            version: 2.1.5
      spring-cloud:
        groupId: org.springframework.cloud
        artifactId: spring-cloud-dependencies
        versionProperty: spring-cloud.version
        order: 50
        mappings:
          - compatibilityRange: "[2.0.0.M3, 2.0.0.M5)"
            version: Finchley.M2
            repositories: spring-milestones
          - compatibilityRange: "[2.0.0.M5, 2.0.0.M5]"
            version: Finchley.M3
            repositories: spring-milestones
          - compatibilityRange: "[2.0.0.M6, 2.0.0.M6]"
            version: Finchley.M4
            repositories: spring-milestones
          - compatibilityRange: "[2.0.0.M7, 2.0.0.M7]"
            version: Finchley.M5
            repositories: spring-milestones
          - compatibilityRange: "[2.0.0.RC1, 2.0.0.RC1]"
            version: Finchley.M6
            repositories: spring-milestones
          - compatibilityRange: "[2.0.0.RC2,2.0.0.RC2]"
            version: Finchley.M7
            repositories: spring-milestones
          - compatibilityRange: "[2.0.0.RELEASE,2.0.0.RELEASE]"
            version: Finchley.M9
            repositories: spring-milestones
          - compatibilityRange: "[2.0.1.RELEASE,2.0.2.RELEASE)"
            version: Finchley.RC1
            repositories: spring-milestones
          - compatibilityRange: "[2.0.2.RELEASE,2.0.3.RELEASE)"
            version: Finchley.RC2
            repositories: spring-milestones
          - compatibilityRange: "[2.0.3.RELEASE,2.0.x.BUILD-SNAPSHOT)"
            version: Finchley.SR4
          - compatibilityRange: "[2.0.x.BUILD-SNAPSHOT,2.1.0.M3)"
            version: Finchley.BUILD-SNAPSHOT
            repositories: spring-snapshots,spring-milestones
          - compatibilityRange: "[2.1.0.M3,2.1.0.RELEASE)"
            version: Greenwich.M1
            repositories: spring-milestones
          - compatibilityRange: "[2.1.0.RELEASE,2.1.x.BUILD-SNAPSHOT)"
            version: Greenwich.SR4
          - compatibilityRange: "[2.1.x.BUILD-SNAPSHOT,2.2.0.M4)"
            version: Greenwich.BUILD-SNAPSHOT
            repositories: spring-snapshots,spring-milestones
          - compatibilityRange: "[2.2.0.M4,2.2.x.BUILD-SNAPSHOT)"
            version: Hoxton.RC2
            repositories: spring-milestones
          - compatibilityRange: "2.2.x.BUILD-SNAPSHOT"
            version: Hoxton.BUILD-SNAPSHOT
            repositories: spring-snapshots,spring-milestones
      spring-cloud-services:
        groupId: io.pivotal.spring.cloud
        artifactId: spring-cloud-services-dependencies
        versionProperty: spring-cloud-services.version
        additionalBoms: [spring-cloud]
        mappings:
          - compatibilityRange: "[2.0.0.RELEASE,2.0.x.BUILD-SNAPSHOT]"
            version: 2.0.3.RELEASE
          - compatibilityRange: "2.1.0.RELEASE"
            version: 2.1.4.RELEASE
      spring-data-r2dbc:
        groupId: org.springframework.boot.experimental
        artifactId: spring-boot-bom-r2dbc
        mappings:
          - compatibilityRange: "[2.2.0.M6,2.2.x.BUILD-SNAPSHOT)"
            version: 0.1.0.M2
            repositories: spring-milestones
          - compatibilityRange: "2.2.x.BUILD-SNAPSHOT"
            version: 0.1.0.BUILD-SNAPSHOT
            repositories: spring-snapshots,spring-milestones
      spring-statemachine:
        groupId: org.springframework.statemachine
        artifactId: spring-statemachine-bom
        versionProperty: spring-statemachine.version
        mappings:
          - compatibilityRange: "[2.0.0.RC1,2.0.0.RC1]"
            version: 2.0.0.M4
            repositories: spring-milestones
          - compatibilityRange: "[2.0.0.RC2,2.0.0.RC2]"
            version: 2.0.0.M5
            repositories: spring-milestones
          - compatibilityRange: "2.0.0.RELEASE"
            version: 2.0.1.RELEASE
      vaadin:
        groupId: com.vaadin
        artifactId: vaadin-bom
        versionProperty: vaadin.version
        mappings:
          - compatibilityRange: "[2.0.0.M1,2.1.0.M1)"
            version: 10.0.17
          - compatibilityRange: "2.1.0.M1"
            version: 14.0.14
    gradle:
      dependency-management-plugin-version: 1.0.8.RELEASE
    kotlin:
      mappings:
        - compatibilityRange: "[1.5.0.RELEASE,2.0.0.M1)"
          version: 1.2.51
    repositories:
      sonatype-snapshots:
        name: Sonatype Snapshots
        url: https://oss.sonatype.org/content/repositories/snapshots/
        snapshotsEnabled: true
  dependencies:
    - name: Web
      content:
        - name: Spring Web
          id: web
          description: Build web, including RESTful, applications using Spring MVC. Uses Apache Tomcat as the default embedded container.
          facets:
            - web
            - json
          links:
            - rel: guide
              href: https://spring.io/guides/gs/rest-service/
              description: Building a RESTful Web Service
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-developing-web-applications
            - rel: guide
              href: https://spring.io/guides/gs/serving-web-content/
              description: Serving Web Content with Spring MVC
            - rel: guide
              href: https://spring.io/guides/tutorials/bookmarks/
              description: Building REST services with Spring
        - name: Spring Reactive Web
          id: webflux
          description: Build reactive web applications with Spring WebFlux and Netty.
          facets:
            - json
            - reactive
        - name: Jersey
          id: jersey
          description: Framework for developing RESTful Web Services in Java that provides support for JAX-RS APIs.
          facets:
           - json
          links:
           - rel: reference
             href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-jersey
    - name: Template Engines
      content:
        - name: Thymeleaf
          id: thymeleaf
          description: A modern server-side Java template engine for both web and standalone environments. Allows HTML to be correctly displayed in browsers and as static prototypes.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/handling-form-submission/
              description: Handling Form Submission
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-spring-mvc-template-engines
        - name: Apache Freemarker
          id: freemarker
          description: Java library to generate text output (HTML web pages, e-mails, configuration files, source code, etc.) based on templates and changing data.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-spring-mvc-template-engines
        - name: Mustache
          id: mustache
          description: Logic-less Templates. There are no if statements, else clauses, or for loops. Instead there are only tags.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-spring-mvc-template-engines
        - name: Groovy Templates
          id: groovy-templates
          description: Groovy templating engine.
          facets:
            - web
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-spring-mvc-template-engines
    - name: SQL
      content:
        - name: JDBC API
          id: jdbc
          description: Database Connectivity API that defines how a client may connect and query a database.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/relational-data-access/
              description: Accessing Relational Data using JDBC with Spring
            - rel: guide
              href: https://spring.io/guides/gs/managing-transactions/
              description: Managing Transactions
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-sql
        - name: Spring Data JPA
          id: data-jpa
          description: Persist data in SQL stores with Java Persistence API using Spring Data and Hibernate.
          facets:
            - jpa
          aliases:
            - jpa
          links:
            - rel: guide
              href: https://spring.io/guides/gs/accessing-data-jpa/
              description: Accessing Data with JPA
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-jpa-and-spring-data
        - name: MyBatis Framework
          id: mybatis
          description: Persistence framework with support for custom SQL, stored procedures and advanced mappings. MyBatis couples objects with stored procedures or SQL statements using a XML descriptor or annotations.
          links:
            - rel: guide
              href: https://github.com/mybatis/spring-boot-starter/wiki/Quick-Start
              description: MyBatis Quick Start
            - rel: reference
              href: https://mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/
          groupId: org.mybatis.spring.boot
          artifactId: mybatis-spring-boot-starter
          mappings:
            - compatibilityRange: "[2.0.0.RELEASE,2.1.0.RELEASE)"
              version: 2.0.1
            - compatibilityRange: "2.1.0.RELEASE"
              version: 2.1.1
        - name: MySQL Driver
          id: mysql
          description: MySQL JDBC and R2DBC driver.
          groupId: mysql
          artifactId: mysql-connector-java
          scope: runtime
          starter: false
          links:
            - rel: guide
              href: https://spring.io/guides/gs/accessing-data-mysql/
              description: Accessing data with MySQL
        - name: Oracle Driver
          id: oracle
          compatibilityRange: 2.2.0.RC1
          description: A JDBC driver that provides access to Oracle.
          groupId: com.oracle.ojdbc
          artifactId: ojdbc8
          scope: runtime
          starter: false
        - name: PostgreSQL Driver
          id: postgresql
          description: A JDBC and R2DBC driver that allows Java programs to connect to a PostgreSQL database using standard, database independent Java code.
          groupId: org.postgresql
          artifactId: postgresql
          scope: runtime
          starter: false
    - name: NoSQL
      content:
        - name: Spring Data Redis (Access+Driver)
          id: data-redis
          description: Advanced and thread-safe Java Redis client for synchronous, asynchronous, and reactive usage. Supports Cluster, Sentinel, Pipelining, Auto-Reconnect, Codecs and much more.
          aliases:
            - redis
          links:
            - rel: guide
              href: https://spring.io/guides/gs/messaging-redis/
              description: Messaging with Redis
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-redis
        - name: Spring Data Reactive Redis
          id: data-redis-reactive
          description: Access Redis key-value data stores in a reactive fashion with Spring Data Redis.
          facets:
            - reactive
          links:
            - rel: guide
              href: https://spring.io/guides/gs/messaging-redis/
              description: Messaging with Redis
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-redis
        - name: Spring Data MongoDB
          id: data-mongodb
          description: Store data in flexible, JSON-like documents, meaning fields can vary from document to document and data structure can be changed over time.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/accessing-data-mongodb/
              description: Accessing Data with MongoDB
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-mongodb
        - name: Spring Data Reactive MongoDB
          id: data-mongodb-reactive
          description: Provides asynchronous stream processing with non-blocking back pressure for MongoDB.
          facets:
            - reactive
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-mongodb
        - name: Spring Data Elasticsearch (Access+Driver)
          id: data-elasticsearch
          description: A distributed, RESTful search and analytics engine with Spring Data Elasticsearch.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-elasticsearch
        - name: Spring Data for Apache Solr
          id: data-solr
          description: Apache Solr is an open source enterprise search platform built on Apache Lucene.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-solr
    - name: Messaging
      content:
        - name: Spring Integration
          id: integration
          description: Adds support for Enterprise Integration Patterns. Enables lightweight messaging and supports integration with external systems via declarative adapters.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/integration/
              description: Integrating Data
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-integration
        - name: Spring for RabbitMQ
          id: amqp
          description: Gives your applications a common platform to send and receive messages, and your messages a safe place to live until received.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/messaging-rabbitmq/
              description: Messaging with RabbitMQ
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-amqp
        - name: Spring for Apache Kafka
          id: kafka
          description: Publish, subscribe, store, and process streams of records.
          groupId: org.springframework.kafka
          artifactId: spring-kafka
          starter: false
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-kafka
        - name: Spring for Apache Kafka Streams
          id: kafka-streams
          description: Building stream processing applications with Apache Kafka Streams.
          groupId: org.apache.kafka
          artifactId: kafka-streams
          starter: false
          links:
            - rel: guide
              href: https://github.com/spring-cloud/spring-cloud-stream-samples/tree/master/kafka-streams-samples
              description: Samples for using Apache Kafka Streams with Spring Cloud stream
            - rel: reference
              href: https://docs.spring.io/spring-kafka/docs/current/reference/html/_reference.html#kafka-streams
              description: Apache Kafka Streams Support
            - rel: reference
              href: https://docs.spring.io/spring-cloud-stream/docs/current/reference/htmlsingle/#_kafka_streams_binding_capabilities_of_spring_cloud_stream
              description: Apache Kafka Streams Binding Capabilities of Spring Cloud Stream
        - name: Spring for Apache ActiveMQ 5
          id: activemq
          description: Spring JMS support with Apache ActiveMQ 'Classic'.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/messaging-jms/
              description: Java Message Service API via Apache ActiveMQ Classic.
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-activemq
        - name: Spring for Apache ActiveMQ Artemis
          id: artemis
          description: Spring JMS support with Apache ActiveMQ Artemis.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/messaging-jms/
              description: Messaging with JMS
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-artemis
        - name: WebSocket
          id: websocket
          description: Build WebSocket applications with SockJS and STOMP.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/messaging-stomp-websocket/
              description: Using WebSocket to build an interactive web application
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-websockets
        - name: RSocket
          id: rsocket
          description: RSocket.io applications with Spring Messaging and Netty.
          compatibilityRange: 2.2.0.M2
          facets:
            - reactive
        - name: Apache Camel
          id: camel
          compatibilityRange: "[2.0.0.M1,2.2.0.M1)"
          mappings:
            - compatibilityRange: "[2.0.0.M1,2.1.0.M1)"
              version: 2.22.4
            - compatibilityRange: "2.1.0.M1"
              version: 2.24.2
          description: Apache Camel lets you create the Enterprise Integration Patterns to implement routing and mediation rules a Java based Domain Specific Language via Spring.
          groupId: org.apache.camel
          artifactId: camel-spring-boot-starter
          links:
            - rel: guide
              href: https://camel.apache.org/spring-boot
              description: Using Apache Camel with Spring Boot
        - name: Solace PubSub+
          id: solace
          compatibilityRange: 2.1.0.RELEASE
          description: Connect to a Solace PubSub+ Advanced Event Broker using the Solace JMS support to send and receive messages.
          groupId: com.solace.spring.boot
          artifactId: solace-jms-spring-boot-starter
          mappings:
            - compatibilityRange: "[2.1.0.RELEASE,2.2.0.M1)"
              version: 3.1.0
            - compatibilityRange: "2.2.0.M1"
              version: 3.2.0
          links:
            - rel: reference
              href: https://solace.dev
              description: Solace Developer Portal
            - rel: reference
              href: https://github.com/SolaceProducts/solace-jms-spring-boot
            - rel: guide
              href: https://github.com/SolaceProducts/solace-jms-spring-boot/tree/master/solace-jms-sample-app
              description: Solace sample application using JMS.
    - name: I/O
      content:
        - name: Spring Batch
          id: batch
          description: Batch applications with transactions, retry/skip and chunk based processing.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/batch-processing/
              description: Creating a Batch Service
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#howto-batch-applications
        - name: Java Mail Sender
          id: mail
          description: Send email using Java Mail and Spring Framework's JavaMailSender.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-email
        - name: Quartz Scheduler
          id: quartz
          description: Schedule jobs using Quartz.
        - name: Spring cache abstraction
          id: cache
          description: Provides cache-related operations, such as the ability to update the content of the cache, but does not provide the actual data store.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/caching/
              description: Caching Data with Spring
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-caching
    - name: Ops
      content:
        - name: Spring Boot Actuator
          id: actuator
          description: Supports built in (or custom) endpoints that let you monitor and manage your application - such as application health, metrics, sessions, etc.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/actuator-service/
              description: Building a RESTful Web Service with Spring Boot Actuator
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#production-ready
        - name: Spring Boot Admin (Client)
          id: codecentric-spring-boot-admin-client
          groupId: de.codecentric
          artifactId: spring-boot-admin-starter-client
          description: Required for your application to register with a Spring Boot Admin Server instance.
          compatibilityRange: "[2.0.0.RELEASE,2.2.0.M1)"
          bom: codecentric-spring-boot-admin
          links:
            - rel: reference
              href: https://codecentric.github.io/spring-boot-admin/current/#getting-started
        - name: Spring Boot Admin (Server)
          id: codecentric-spring-boot-admin-server
          groupId: de.codecentric
          artifactId: spring-boot-admin-starter-server
          description: A community project to manage and monitor your Spring Boot applications. Provides a UI on top of the Spring Boot Actuator endpoints.
          compatibilityRange: "[2.0.0.RELEASE,2.2.0.M1)"
          bom: codecentric-spring-boot-admin
          links:
            - rel: reference
              href: https://codecentric.github.io/spring-boot-admin/current/#getting-started
    - name: Testing
      content:
        - name: Spring REST Docs
          id: restdocs
          description: Document RESTful services by combining hand-written with Asciidoctor and auto-generated snippets produced with Spring MVC Test.
          groupId: org.springframework.restdocs
          artifactId: spring-restdocs-mockmvc
          scope: test
          starter: false
        - name: Contract Verifier
          bom: spring-cloud
          id: cloud-contract-verifier
          description: Moves TDD to the level of software architecture by enabling Consumer Driven Contract (CDC) development.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-contract-verifier
          scope: test
          links:
            - rel: guide
              href: https://cloud.spring.io/spring-cloud-contract/spring-cloud-contract.html#_spring_cloud_contract_verifier_setup
              description: Spring Cloud Contract Verifier Setup
        - name: Contract Stub Runner
          bom: spring-cloud
          id: cloud-contract-stub-runner
          description: Stub Runner for HTTP/Messaging based communication. Allows creating WireMock stubs from RestDocs tests.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-contract-stub-runner
          scope: test
        - name: Embedded LDAP Server
          id: unboundid-ldap
          description: Provides a platform neutral way for running a LDAP server in unit tests.
          groupId: com.unboundid
          artifactId: unboundid-ldapsdk
          scope: test
          starter: false
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/html/boot-features-nosql.html#boot-features-ldap-embedded
        - name: Embedded MongoDB Database
          id: flapdoodle-mongo
          description: Provides a platform neutral way for running MongoDB in unit tests.
          groupId: de.flapdoodle.embed
          artifactId: de.flapdoodle.embed.mongo
          scope: test
          starter: false
  types:
    - name: Maven Project
      id: maven-project
      description: Generate a Maven based project archive.
      tags:
        build: maven
        format: project
      default: true
      action: /starter.zip
    - name: Maven POM
      id: maven-build
      description: Generate a Maven pom.xml.
      tags:
        build: maven
        format: build
      default: false
      action: /pom.xml
    - name: Gradle Project
      id: gradle-project
      description: Generate a Gradle based project archive.
      tags:
        build: gradle
        format: project
      default: false
      action: /starter.zip
    - name: Gradle Config
      id: gradle-build
      description: Generate a Gradle build file.
      tags:
        build: gradle
        format: build
      default: false
      action: /build.gradle
  packagings:
    - name: Jar
      id: jar
      default: true
    - name: War
      id: war
      default: false
  javaVersions:
    - id: 13
      default: false
    - id: 11
      default: false
    - id: 1.8
      name: 8
      default: true
  languages:
    - name: Java
      id: java
      default: true
#    - name: Kotlin
#      id: kotlin
#      default: false
#    - name: Groovy
#      id: groovy
#      default: false
  bootVersions:
    - name : Latest SNAPSHOT
      id: 2.2.0.BUILD-SNAPSHOT
      default: false
    - name : 2.1.1.
      id: 2.1.1.RELEASE
      default: true

---

spring:
  profiles: dev
  resources:
    static_locations:
      - file:sedum-client/public/
  devtools:
    restart:
      additional_paths:
        - sedum-client/public/
      additional_exclude: "**/*.js,**/*.css,**/*.html"
